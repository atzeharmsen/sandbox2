from scipy.interpolate import griddata
from ambiance import Atmosphere
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# MYHRE
molar_mass_air = 28.97 * 10**-3  # kg/mol
M_h2o = 18.01528 * 10**-3  # kg/mol
N_avogrado = 6.02214076 * 10**23


def get_volume_matrix(heights, latitudes, delta_h, delta_deg):
    """
    A function to get the volume of every box of air in an altitude-latitude graph
    The heights and latitudes arrays should have a spacing equivalent to the corresponding delta
    Args:
        heights: a np.array of heights in meters
        latitudes: a np.array of latitudes in degrees
        delta_h: the step between every height in meters
        delta_deg: the step between every latitude in degrees

    Returns: A matrix of volumes. rows correspond to altitude, column to latitude

    """
    R = 6371000.0  # Earth radius in meters
    # delta_h = 100.  # height increment in meters
    # delta_deg = 1.  # latitude increment
    delta_phi = np.deg2rad(delta_deg)

    # heights = np.arange(0, 60000 + delta_h, delta_h)  # 0 to 60 km
    # latitudes = np.arange(-85, 86, delta_deg)  # -85° to 85°

    # Volume of 1° latitude x 100 m height strip integrated over all longitude
    volumes = np.zeros((len(heights), len(latitudes)))

    for i, h in enumerate(heights):
        for j, lat in enumerate(latitudes):
            volumes[i, j] = (
                2 * np.pi * (R + h) ** 2 * np.cos(np.deg2rad(lat)) * delta_phi * delta_h
            )

    # print("Volume shape:", volumes.shape)
    # print("Volume at equator, sea level:", volumes[0, 0])
    # print(volumes)
    return volumes


def construct_myhre_2a_df(cp_lat=87, cp_a=60):
    atropo = [
        [-85.63312, 8.86024],
        [-79.62440, 8.87259],
        [-73.74408, 8.88383],
        [-67.67407, 8.87259],
        [-61.60407, 8.87259],
        [-55.72375, 9.33192],
        [-49.84343, 10.06334],
        [-43.96311, 10.79976],
        [-38.65185, 12.10783],
        [-33.34060, 13.27611],
        [-27.64996, 14.26576],
        [-21.58673, 14.53563],
        [-15.50995, 14.53426],
        [-9.62963, 14.53426],
        [-3.55962, 14.53426],
        [2.51038, 14.53426],
        [8.58039, 14.53426],
        [14.46071, 14.53426],
        [20.53072, 14.53426],
        [26.32349, 14.23149],
        [31.34292, 12.60210],
        [36.27480, 11.08334],
        [41.39637, 9.65145],
        [47.84575, 9.64146],
        [53.34670, 8.87259],
        [59.60639, 8.87259],
        [65.48671, 8.88383],
        [71.55672, 8.88383],
        [77.61213, 8.85945],
        [83.78707, 8.86709],
    ]

    a02 = [
        [-85.52580, 11.47543],
        [-80.82576, 11.60461],
        [-76.85496, 11.87417],
        [-72.79564, 12.05064],
        [-68.62251, 12.10783],
        [-64.44938, 12.18953],
        [-60.27625, 12.34475],
        [-56.10312, 12.58985],
        [-51.92999, 12.96566],
        [-47.75686, 13.52120],
        [-43.58373, 14.24014],
        [-39.41060, 15.04078],
        [-35.23747, 15.66986],
        [-31.17816, 15.89126],
        [-26.56617, 16.07595],
        [-22.71808, 16.65677],
        [-18.54495, 17.54891],
        [-14.37182, 18.77438],
        [-10.19869, 20.17958],
        [-6.02556, 21.20080],
        [-1.85243, 21.63380],
        [2.32070, 21.43773],
        [6.49383, 20.33481],
        [10.66696, 19.23188],
        [14.84009, 18.31687],
        [19.01322, 17.57342],
        [23.04244, 16.91278],
        [27.32154, 16.46042],
        [31.53261, 16.00482],
        [35.70574, 15.62084],
        [39.87887, 14.91007],
        [44.05200, 14.23197],
        [48.22513, 13.70094],
        [52.39826, 13.16990],
        [56.57139, 12.81860],
        [60.74452, 12.53266],
        [64.91765, 12.22221],
        [69.09078, 11.88725],
        [73.26391, 11.74836],
        [77.57349, 11.73209],
        [81.95379, 11.55043],
        [85.97298, 11.27094],
    ]

    a04 = [
        [-85.31503, 13.56205],
        [-81.14190, 13.80715],
        [-76.78181, 14.10280],
        [-72.07265, 14.35829],
        [-67.48439, 15.00810],
        [-63.31126, 15.52280],
        [-59.13813, 15.89861],
        [-54.96500, 16.26625],
        [-50.79187, 16.56853],
        [-46.61874, 16.88716],
        [-42.44561, 17.21395],
        [-38.27248, 17.51623],
        [-34.09935, 18.01459],
        [-29.92622, 18.78255],
        [-25.75309, 19.88547],
        [-21.70641, 21.29929],
        [-17.40683, 23.10164],
        [-13.23370, 24.98342],
        [-9.06057, 26.25790],
        [-4.88744, 26.93599],
        [-0.71431, 27.17292],
        [3.45882, 26.95233],
        [7.63195, 26.18437],
        [11.80508, 25.00792],
        [15.97821, 23.54553],
        [20.15134, 21.80537],
        [23.94510, 20.32007],
        [28.02611, 19.35803],
        [32.67073, 18.46392],
        [36.84386, 17.88387],
        [41.01699, 17.46721],
        [45.19012, 17.12408],
        [49.36325, 16.78095],
        [53.53638, 16.47050],
        [57.70951, 16.29076],
        [61.88264, 16.08652],
        [66.05577, 15.80057],
        [70.22890, 15.46561],
        [74.40203, 15.15516],
        [78.53301, 14.88604],
        [82.89056, 14.65503],
        [86.16267, 14.39304],
    ]

    a06 = [
        [-85.31503, 15.77606],
        [-81.14190, 16.09469],
        [-76.93084, 16.43341],
        [-72.07904, 16.73894],
        [-67.86376, 17.28748],
        [-63.69063, 17.96557],
        [-59.51750, 18.71719],
        [-55.34437, 19.49332],
        [-51.17124, 20.18775],
        [-46.99811, 20.68611],
        [-42.82498, 20.84950],
        [-38.65185, 21.18446],
        [-34.47872, 21.86256],
        [-30.30559, 22.96548],
        [-26.13246, 24.46763],
        [-22.24223, 25.94228],
        [-17.78620, 27.76713],
        [-13.61307, 29.25621],
        [-9.43994, 30.08136],
        [-5.26681, 30.42449],
        [-1.09368, 30.62057],
        [3.07945, 30.55521],
        [7.25258, 30.27744],
        [11.42571, 29.65653],
        [15.59884, 28.48008],
        [19.77197, 26.96867],
        [23.79335, 25.00983],
        [27.65455, 23.42150],
        [31.53261, 22.36908],
        [35.70574, 21.46224],
        [39.87887, 20.89035],
        [44.05200, 20.43284],
        [48.22513, 19.99168],
        [52.39826, 19.50149],
        [56.57139, 19.08483],
        [60.74452, 18.70902],
        [64.91765, 18.25968],
        [69.09078, 17.83485],
        [73.26391, 17.56525],
        [77.31058, 17.38583],
        [82.80684, 16.95667],
        [86.35236, 16.90077],
    ]

    a08 = [
        [-85.31503, 17.96557],
        [-81.14190, 18.27095],
        [-76.67370, 18.79961],
        [-72.79564, 19.31358],
        [-68.62251, 20.19592],
        [-64.44938, 21.18446],
        [-60.27625, 22.33640],
        [-56.10312, 23.48834],
        [-51.92999, 24.59127],
        [-47.75686, 25.48994],
        [-43.58373, 25.93111],
        [-39.41060, 26.44581],
        [-35.23747, 27.10756],
        [-31.06434, 27.98990],
        [-27.01767, 28.74400],
        [-22.71808, 30.01328],
        [-18.54495, 31.15977],
        [-14.37182, 32.17283],
        [-10.19869, 32.76105],
        [-6.02556, 33.10418],
        [-1.85243, 33.31660],
        [2.32070, 33.40647],
        [6.49383, 33.30843],
        [10.66696, 33.00615],
        [14.84009, 32.48328],
        [19.01322, 31.60911],
        [23.18635, 30.22869],
        [27.35948, 28.51930],
        [31.53261, 27.04220],
        [35.70574, 25.79222],
        [39.87887, 24.92623],
        [44.05200, 24.33800],
        [48.22513, 23.80697],
        [52.39826, 23.16155],
        [56.57139, 22.55699],
        [60.74452, 21.92791],
        [64.91765, 21.29067],
        [69.09078, 20.85767],
        [73.18803, 20.47451],
        [77.31058, 20.19873],
        [81.68604, 20.02877],
        [85.59361, 19.76455],
    ]

    a10 = [
        [-84.93566, 20.21226],
        [-80.64871, 20.86094],
        [-76.58940, 21.63380],
        [-72.41627, 22.45078],
        [-68.24314, 23.57821],
        [-64.07001, 24.99975],
        [-59.89688, 26.54384],
        [-55.72375, 27.78565],
        [-51.55062, 28.87223],
        [-47.37749, 29.75457],
        [-43.20436, 30.15489],
        [-39.03123, 30.48985],
        [-34.85810, 30.95553],
        [-30.68497, 31.62545],
        [-26.51184, 32.45877],
        [-22.33871, 33.35745],
        [-18.16558, 34.24795],
        [-13.99245, 34.98324],
        [-9.81932, 35.36722],
        [-5.64619, 35.68584],
        [-1.47306, 35.89825],
        [2.70007, 36.01263],
        [6.87320, 36.01263],
        [11.04633, 35.86557],
        [15.21946, 35.50610],
        [19.39259, 34.94239],
        [23.67954, 33.99536],
        [27.73885, 32.51596],
        [31.91198, 30.89017],
        [36.08511, 29.57484],
        [40.25824, 28.47191],
        [44.43137, 27.81833],
        [48.60450, 27.39350],
        [52.77763, 26.81345],
        [56.95076, 26.11902],
        [61.12389, 25.31021],
        [65.29702, 24.49323],
        [69.47015, 23.80697],
        [73.60113, 23.29099],
        [77.81641, 23.02267],
        [81.98954, 22.74489],
        [85.78330, 22.49254],
    ]

    a12 = [
        [-85.31503, 23.44750],
        [-81.14409, 24.41970],
        [-76.96659, 25.38743],
        [-72.41627, 26.40496],
        [-68.24314, 27.51605],
        [-64.07001, 28.74152],
        [-59.89688, 30.05685],
        [-55.72375, 31.06991],
        [-51.55062, 32.00943],
        [-47.37749, 32.72837],
        [-43.20436, 33.21039],
        [-39.03123, 33.66790],
        [-34.85810, 34.19077],
        [-30.68497, 34.88030],
        [-25.73248, 35.83940],
        [-21.20058, 36.58451],
        [-17.02745, 37.30345],
        [-12.85432, 37.81815],
        [-8.68119, 38.07141],
        [-4.50806, 38.27566],
        [-0.33493, 38.44722],
        [3.83820, 38.56977],
        [8.01133, 38.70866],
        [12.18446, 38.65147],
        [16.35759, 38.42272],
        [20.53072, 37.98155],
        [24.60901, 37.17529],
        [28.87698, 35.81546],
        [33.05011, 34.25612],
        [37.22324, 32.73654],
        [41.39637, 31.58460],
        [45.56950, 30.92285],
        [49.74263, 30.44900],
        [53.91576, 30.00783],
        [58.08889, 29.45229],
        [62.26202, 28.55361],
        [66.43515, 27.61409],
        [70.60828, 26.82979],
        [74.45623, 26.30264],
        [80.43410, 25.45617],
        [84.64517, 24.89355],
    ]

    a14 = [
        [-85.31503, 27.64677],
        [-82.28003, 28.18696],
        [-76.96877, 29.26275],
        [-72.79564, 30.03234],
        [-68.62251, 30.86566],
        [-64.44938, 31.97675],
        [-60.27625, 33.11235],
        [-56.10312, 34.12541],
        [-51.92999, 34.99140],
        [-47.75686, 35.72669],
        [-43.58373, 36.29040],
        [-39.41060, 36.84595],
        [-35.23747, 37.45051],
        [-31.06434, 38.12043],
        [-25.75309, 39.12322],
        [-21.57996, 39.79524],
        [-17.40683, 40.39980],
        [-13.23370, 40.81646],
        [-9.06057, 41.02071],
        [-4.88744, 41.16776],
        [-0.71431, 41.31482],
        [3.45882, 41.48639],
        [7.63195, 41.71514],
        [11.80508, 41.85403],
        [15.97821, 41.94389],
        [20.15134, 41.80501],
        [24.13479, 41.28190],
        [29.25635, 40.00493],
        [33.42948, 38.49624],
        [37.60261, 36.83778],
        [41.77574, 35.44891],
        [45.94887, 34.60742],
        [50.12200, 34.01103],
        [54.29513, 33.49633],
        [58.46826, 32.94079],
        [62.64139, 32.23819],
        [66.81452, 31.41304],
        [70.98765, 30.59606],
        [74.71818, 29.91187],
        [79.71329, 28.87060],
        [83.88642, 28.09610],
        [86.73174, 27.56507],
    ]

    a16 = [
        [-85.47311, 31.62409],
        [-81.21778, 32.55350],
        [-76.82651, 33.29871],
        [-72.79564, 33.88522],
        [-68.62251, 34.69729],
        [-64.44938, 35.65316],
        [-60.27625, 36.64170],
        [-56.10312, 37.63025],
        [-51.92999, 38.52892],
        [-47.75686, 39.37041],
        [-43.58373, 40.13837],
        [-39.41060, 40.96352],
        [-35.23747, 41.89488],
        [-31.06434, 42.76087],
        [-26.83702, 43.68989],
        [-22.33871, 44.29352],
        [-18.16558, 44.77881],
        [-13.99245, 44.99122],
        [-9.81932, 44.99939],
        [-5.64619, 45.00756],
        [-1.47306, 45.13828],
        [2.70007, 45.26900],
        [6.87320, 45.61213],
        [11.04633, 45.93075],
        [15.21946, 46.20035],
        [19.39259, 46.44545],
        [23.56572, 46.38009],
        [27.73885, 45.85875],
        [32.29136, 44.78044],
        [36.46449, 43.24289],
        [40.63762, 41.31482],
        [44.81075, 39.83609],
        [48.98388, 38.75768],
        [53.15701, 37.99789],
        [57.33014, 37.24627],
        [61.50327, 36.61719],
        [65.67640, 36.03714],
        [69.84953, 35.44891],
        [74.02266, 34.89337],
        [78.63839, 34.20205],
        [83.12767, 33.55352],
        [86.35236, 33.00206],
    ]

    a18 = [
        [-84.93566, 38.39004],
        [-80.76253, 38.86388],
        [-76.88447, 39.29779],
        [-72.64389, 39.66229],
        [-68.24314, 40.24458],
        [-64.07001, 41.06973],
        [-59.89688, 42.25435],
        [-55.72375, 43.81478],
        [-51.55062, 45.62847],
        [-47.37749, 47.60556],
        [-43.20436, 49.63983],
        [-39.03123, 51.29013],
        [-34.85810, 52.56462],
        [-31.06434, 53.27720],
        [-27.46246, 53.56032],
        [-22.37664, 53.79744],
        [-18.16558, 53.65120],
        [-13.99245, 53.38977],
        [-9.81932, 52.98128],
        [-5.64619, 52.72801],
        [-1.47306, 52.57279],
        [2.70007, 52.59730],
        [6.87320, 53.03847],
        [11.04633, 53.49597],
        [15.21946, 53.90446],
        [19.39259, 54.24759],
        [23.56572, 54.45184],
        [27.29625, 54.57108],
        [33.01217, 54.07183],
        [37.22324, 53.23454],
        [41.39637, 51.70679],
        [45.37981, 49.72643],
        [48.79419, 47.71789],
        [51.82919, 45.78574],
        [55.43326, 44.10072],
        [59.60639, 42.78538],
        [63.77952, 42.01742],
        [67.95265, 41.58442],
        [72.09362, 41.22022],
        [76.45971, 40.72173],
        [80.47204, 40.36712],
        [84.64517, 39.90145],
        [87.11111, 39.78707],
    ]

    tropopause_df = pd.DataFrame(atropo, columns=["latitude", "altitude"])
    a02_df = pd.DataFrame(a02, columns=["latitude", "altitude"])
    a04_df = pd.DataFrame(a04, columns=["latitude", "altitude"])
    a06_df = pd.DataFrame(a06, columns=["latitude", "altitude"])
    a08_df = pd.DataFrame(a08, columns=["latitude", "altitude"])
    a10_df = pd.DataFrame(a10, columns=["latitude", "altitude"])
    a12_df = pd.DataFrame(a12, columns=["latitude", "altitude"])
    a14_df = pd.DataFrame(a14, columns=["latitude", "altitude"])
    a16_df = pd.DataFrame(a16, columns=["latitude", "altitude"])
    a18_df = pd.DataFrame(a18, columns=["latitude", "altitude"])

    # Add a 'value' column to each one before concatenating
    tropopause_df["value"] = 0.0
    a02_df["value"] = 0.2
    a04_df["value"] = 0.4
    a06_df["value"] = 0.6
    a08_df["value"] = 0.8
    a10_df["value"] = 1.0
    a12_df["value"] = 1.2
    a14_df["value"] = 1.4
    a16_df["value"] = 1.6
    a18_df["value"] = 1.8

    tropopause_df["source"] = "tropopause"
    a02_df["source"] = "a02"
    a04_df["source"] = "a04"
    a06_df["source"] = "a06"
    a08_df["source"] = "a08"
    a10_df["source"] = "a10"
    a12_df["source"] = "a12"
    a14_df["source"] = "a14"
    a16_df["source"] = "a16"
    a18_df["source"] = "a18"

    # Concatenate them
    a_df = pd.concat(
        [
            tropopause_df,
            a02_df,
            a04_df,
            a06_df,
            a08_df,
            a10_df,
            a12_df,
            a14_df,
            a16_df,
            a18_df,
        ],
        ignore_index=True,
    )
    added_cornerpoints = [
        {"latitude": -cp_lat, "altitude": cp_a, "value": 1.8},
        {"latitude": cp_lat, "altitude": cp_a, "value": 1.8},
    ]
    a_df = pd.concat([a_df, pd.DataFrame(added_cornerpoints)], ignore_index=True)
    a_df["altitude"] = a_df["altitude"] * 1000  # convert to meters
    a_df["value"] = a_df["value"] / 1046.604125976563  # normalize to 1 ppbv
    return a_df


def construct_myhre_2b_df(cp_lat=87, cp_a=60):
    # different lines for all lines in the plot
    b02 = [
        [-86.01027, 12.99162],
        [-82.06041, 13.10290],
        [-77.77865, 13.37418],
        [-74.25444, 13.68127],
        [-70.63141, 13.94329],
        [-67.00839, 14.26925],
        [-63.38537, 14.61653],
        [-59.76234, 15.07748],
        [-56.13932, 15.55974],
        [-52.51629, 15.86439],
        [-48.89327, 16.10509],
        [-45.27024, 16.36711],
        [-41.64722, 16.62912],
        [-38.02420, 16.90535],
        [-34.40117, 17.29525],
        [-30.77815, 17.75620],
        [-27.05631, 18.37530],
        [-22.98315, 19.75268],
        [-19.25034, 21.04298],
        [-15.79200, 22.62439],
        [-12.33366, 24.08928],
        [-8.71063, 25.14703],
        [-5.08761, 25.71456],
        [-1.46459, 25.96947],
        [2.15844, 25.84783],
        [5.78146, 25.31411],
        [9.40449, 24.50331],
        [13.02751, 23.38700],
        [16.65054, 21.90124],
        [20.27356, 20.51045],
        [23.09147, 19.47935],
        [26.53151, 18.80121],
        [30.15454, 18.06146],
        [33.77756, 17.52064],
        [37.40059, 17.11480],
        [41.02361, 16.77292],
        [44.64663, 16.48787],
        [48.26966, 16.22413],
        [51.89268, 15.95329],
        [55.51571, 15.78902],
        [59.13873, 15.63896],
        [62.76176, 15.36101],
        [66.38478, 14.89124],
        [70.00780, 14.44278],
        [73.66377, 14.15756],
        [77.63027, 13.95785],
        [80.94275, 13.87604],
        [84.49990, 13.62229],
        [86.80546, 13.63595],
    ]

    b04 = [
        [-86.01027, 16.65277],
        [-82.25803, 17.08352],
        [-79.19493, 17.31579],
        [-74.97904, 17.71826],
        [-71.29015, 18.07132],
        [-67.66712, 18.73831],
        [-64.04410, 19.63976],
        [-60.42107, 20.50568],
        [-56.79805, 21.23661],
        [-53.17502, 21.94623],
        [-49.55200, 22.60611],
        [-45.92898, 23.03864],
        [-42.30595, 23.30776],
        [-38.68293, 23.76161],
        [-35.05990, 24.47123],
        [-31.43688, 25.37978],
        [-27.97854, 26.49479],
        [-23.20273, 27.92891],
        [-19.57971, 29.29880],
        [-15.95668, 30.34234],
        [-12.33366, 31.02354],
        [-8.71063, 31.51291],
        [-5.08761, 31.81045],
        [-1.46459, 31.97300],
        [2.15844, 32.01477],
        [5.78146, 31.87181],
        [9.40449, 31.56545],
        [13.02751, 31.02463],
        [16.65054, 30.30618],
        [20.10888, 29.33177],
        [23.48488, 27.70503],
        [27.19024, 26.26107],
        [30.81327, 24.87478],
        [34.43629, 23.87925],
        [38.05932, 23.08976],
        [41.68234, 22.54894],
        [45.30537, 22.11469],
        [48.92839, 21.68044],
        [52.55141, 21.24619],
        [56.17444, 20.83325],
        [59.79746, 20.39189],
        [63.42049, 19.90791],
        [67.04351, 19.50208],
        [70.66654, 19.13888],
        [74.35543, 18.81130],
        [78.42493, 18.41836],
        [82.52371, 18.31191],
        [85.65268, 18.09092],
    ]

    b06 = [
        [-86.97620, 20.59368],
        [-83.80605, 21.10092],
        [-80.18302, 21.77502],
        [-76.72468, 22.51262],
        [-72.60761, 23.39063],
        [-68.98459, 24.33008],
        [-65.36156, 25.56545],
        [-61.73854, 26.90028],
        [-58.11551, 28.01487],
        [-54.49249, 29.07263],
        [-50.86946, 29.95276],
        [-47.24644, 30.52738],
        [-43.62341, 30.86045],
        [-40.00039, 31.17930],
        [-36.37737, 31.58342],
        [-32.75434, 32.13673],
        [-29.29600, 32.74834],
        [-26.00234, 33.43248],
        [-21.88527, 34.31623],
        [-18.26224, 34.96809],
        [-14.63922, 35.61377],
        [-11.01620, 35.96815],
        [-7.39317, 36.22306],
        [-3.77015, 36.42824],
        [-0.14712, 36.59789],
        [3.47590, 36.68940],
        [7.09893, 36.70985],
        [10.72195, 36.58821],
        [14.34498, 36.35289],
        [17.96800, 35.96838],
        [21.59102, 35.33519],
        [25.21405, 34.22883],
        [28.71356, 32.92344],
        [31.06029, 32.13322],
        [34.43629, 30.89877],
        [38.05932, 29.93166],
        [41.68234, 29.03560],
        [45.30537, 28.53030],
        [48.92839, 28.10315],
        [52.55141, 27.64048],
        [56.17444, 27.14939],
        [59.79746, 26.49489],
        [63.42049, 25.64146],
        [67.04351, 24.96565],
        [70.66654, 24.38930],
        [74.28956, 23.96216],
        [78.02237, 23.58945],
        [81.74146, 23.24174],
        [85.25744, 23.04119],
    ]

    b08 = [
        [-86.01027, 27.59411],
        [-82.15922, 28.34626],
        [-77.87746, 29.13530],
        [-74.25444, 29.83753],
        [-70.63141, 30.46899],
        [-67.00839, 31.32070],
        [-63.38537, 32.32162],
        [-59.76234, 33.26569],
        [-56.13932, 34.11740],
        [-52.51629, 34.92649],
        [-48.89327, 35.59348],
        [-45.27024, 36.12548],
        [-41.64722, 36.59353],
        [-38.02420, 37.09711],
        [-34.40117, 37.65753],
        [-30.77815, 38.23405],
        [-26.78459, 38.93074],
        [-23.53210, 39.42404],
        [-19.90907, 40.12655],
        [-16.28605, 40.60171],
        [-12.66302, 40.94188],
        [-9.04000, 41.07601],
        [-5.41698, 41.19593],
        [-1.79395, 41.31585],
        [1.82907, 41.46419],
        [5.45210, 41.65516],
        [9.07512, 41.82482],
        [12.69815, 41.93763],
        [16.32117, 41.94388],
        [19.94420, 41.87197],
        [23.56722, 41.25726],
        [27.15731, 40.50577],
        [30.81327, 39.63849],
        [34.43629, 38.12432],
        [38.05932, 36.73092],
        [41.68234, 35.48673],
        [45.30537, 34.76118],
        [48.92839, 34.21325],
        [52.55141, 33.75059],
        [56.17444, 33.27371],
        [59.79746, 32.76841],
        [63.42049, 32.12812],
        [67.04351, 31.40257],
        [70.66654, 30.69123],
        [74.28956, 29.97607],
        [78.09557, 29.25466],
        [81.53561, 28.64248],
        [85.15863, 27.89562],
    ]

    b10 = [
        [-86.01027, 36.28708],
        [-82.15922, 37.00101],
        [-78.53620, 37.45486],
        [-74.83998, 37.86685],
        [-71.29015, 38.20624],
        [-67.66712, 38.79508],
        [-64.04410, 39.52601],
        [-60.42107, 40.45588],
        [-56.79805, 41.48521],
        [-53.17502, 42.57848],
        [-49.55200, 43.85648],
        [-45.92898, 45.14159],
        [-42.30595, 46.58300],
        [-38.68293, 47.86810],
        [-35.05990, 49.01821],
        [-31.43688, 49.83440],
        [-27.81385, 50.37137],
        [-23.53210, 50.56432],
        [-19.90907, 50.69135],
        [-16.28605, 50.64075],
        [-12.66302, 50.47648],
        [-9.04000, 50.24827],
        [-5.41698, 50.11952],
        [-1.79395, 50.07604],
        [1.82907, 50.08939],
        [5.45210, 50.32298],
        [9.07512, 50.62763],
        [12.69815, 50.94648],
        [16.32117, 51.40033],
        [19.94420, 51.78313],
        [23.56722, 51.93857],
        [27.00726, 51.89276],
        [30.99625, 51.50974],
        [34.43629, 50.77081],
        [38.05932, 49.72555],
        [41.68234, 48.24690],
        [44.97600, 46.57413],
        [48.10498, 44.91395],
        [51.56332, 43.34937],
        [55.18634, 42.07675],
        [58.80937, 41.20911],
        [62.43239, 40.56882],
        [66.05541, 40.13457],
        [69.67844, 39.77137],
        [73.30146, 39.42237],
        [77.11270, 38.97307],
        [80.54751, 38.63913],
        [84.17054, 38.22619],
        [86.73959, 37.89450],
    ]

    tropopause = [
        [-85.69224459466632, 8.7659753129117],
        [-79.63251933664336, 8.86646902536853],
        [-73.5727940786204, 8.86646902536853],
        [-67.51306882059745, 8.86646902536853],
        [-61.453343562574496, 8.86646902536853],
        [-55.78456832119818, 9.35090025464757],
        [-49.92031807149854, 10.072393574850409],
        [-44.05606782179891, 10.824808037347651],
        [-38.77824259706924, 12.094636280904645],
        [-33.10946735569293, 13.226350088879961],
        [-27.636167122639932, 14.205519594869529],
        [-21.576441864616967, 14.52503806524507],
        [-15.516716606594017, 14.52503806524507],
        [-9.65246635689438, 14.52503806524507],
        [-3.5927410988714286, 14.52503806524507],
        [2.4669841591515365, 14.52503806524507],
        [8.526709417174487, 14.52503806524507],
        [14.586434675197452, 14.52503806524507],
        [20.646159933220403, 14.52503806524507],
        [26.705885191243354, 14.277668926889817],
        [31.20181038267974, 12.586282443385727],
        [36.479635607409406, 11.103098317997315],
        [41.36651081549245, 9.643362725515509],
        [47.62171108183871, 9.573790155353088],
        [53.48596133153835, 8.866469025368524],
        [59.54568658956133, 8.866469025368517],
        [65.60541184758428, 8.878064453728918],
        [71.66513710560723, 8.866469025368517],
        [77.52938735530687, 8.866469025368517],
        [83.87146540313019, 9.010767689409079],
    ]

    tropopause_df = pd.DataFrame(tropopause, columns=["latitude", "altitude"])
    b02_df = pd.DataFrame(b02, columns=["latitude", "altitude"])
    b04_df = pd.DataFrame(b04, columns=["latitude", "altitude"])
    b06_df = pd.DataFrame(b06, columns=["latitude", "altitude"])
    b08_df = pd.DataFrame(b08, columns=["latitude", "altitude"])
    b10_df = pd.DataFrame(b10, columns=["latitude", "altitude"])

    # Add a 'value' column to each one before concatenating
    tropopause_df["value"] = 0.0
    b02_df["value"] = 0.2
    b04_df["value"] = 0.4
    b06_df["value"] = 0.6
    b08_df["value"] = 0.8
    b10_df["value"] = 1.0
    tropopause_df["source"] = "tropopause"
    b02_df["source"] = "b02"
    b04_df["source"] = "b04"
    b06_df["source"] = "b06"
    b08_df["source"] = "b08"
    b10_df["source"] = "b10"

    # Concatenate them
    b_df = pd.concat(
        [tropopause_df, b02_df, b04_df, b06_df, b08_df, b10_df], ignore_index=True
    )

    # Add cornerpoints to fill above value = 1.0 line
    added_cornerpoints = [
        {"latitude": -cp_lat, "altitude": cp_a, "value": 1.0},
        {"latitude": cp_lat, "altitude": cp_a, "value": 1.0},
    ]
    b_df = pd.concat([b_df, pd.DataFrame(added_cornerpoints)], ignore_index=True)
    b_df["altitude"] = b_df["altitude"] * 1000  # convert to meters
    b_df["value"] = b_df["value"] / 614.189575195313  # normalize for 1 ppbv
    return b_df


def construct_myhre_2c_df(cp_lat=87, cp_a=60):
    c01 = [
        [-84.62095, 14.34320],
        [-80.76127, 14.60482],
        [-76.78708, 15.02511],
        [-72.98084, 15.31373],
        [-69.13575, 15.70526],
        [-65.29067, 16.08172],
        [-61.44559, 16.43560],
        [-57.60050, 16.81959],
        [-53.75542, 17.23371],
        [-49.91034, 17.53488],
        [-46.06525, 17.83605],
        [-42.22017, 18.19746],
        [-38.37509, 18.55886],
        [-34.53000, 19.10850],
        [-30.68492, 19.96685],
        [-26.94470, 20.89725],
        [-23.14040, 22.04891],
        [-19.14967, 23.94232],
        [-15.30459, 25.75688],
        [-11.45950, 27.11216],
        [-7.61442, 27.88015],
        [-3.76934, 28.24909],
        [0.07575, 28.33191],
        [3.92083, 28.14368],
        [7.76591, 27.58651],
        [11.61100, 26.63781],
        [15.45608, 25.29007],
        [19.30116, 23.58977],
        [22.29178, 22.38718],
        [25.94267, 21.16401],
        [29.78775, 20.11743],
        [33.63284, 19.39462],
        [37.47792, 18.81486],
        [41.32300, 18.39322],
        [45.16809, 18.03934],
        [49.01317, 17.67794],
        [52.85825, 17.32406],
        [56.70333, 17.11324],
        [60.54842, 16.90242],
        [64.39350, 16.60877],
        [68.23858, 16.33019],
        [72.15358, 16.03002],
        [76.10353, 15.86714],
        [80.47294, 15.78055],
        [84.31802, 15.63749],
    ]

    c02 = [
        [-85.56474, 19.43126],
        [-81.56430, 19.76045],
        [-77.52503, 20.41045],
        [-73.67994, 21.12636],
        [-69.83486, 21.87176],
        [-65.98978, 22.99363],
        [-62.14469, 24.31879],
        [-58.29961, 25.62136],
        [-54.45453, 26.86369],
        [-50.60944, 27.78980],
        [-46.76436, 28.47497],
        [-42.91928, 28.86649],
        [-39.07419, 29.29566],
        [-35.22911, 29.80765],
        [-31.60250, 30.35795],
        [-27.53894, 30.91195],
        [-23.69386, 31.96104],
        [-19.84878, 32.90973],
        [-16.00369, 33.70031],
        [-12.15861, 34.25748],
        [-8.31353, 34.58124],
        [-4.46844, 34.86735],
        [-0.62336, 35.04805],
        [3.22172, 35.12335],
        [7.06681, 35.10076],
        [10.91189, 34.85982],
        [14.75697, 34.48335],
        [18.60206, 33.93371],
        [22.52780, 32.97126],
        [26.29222, 31.63677],
        [30.13731, 30.22177],
        [33.98239, 28.87402],
        [37.82747, 27.79733],
        [41.67256, 27.06698],
        [45.51764, 26.57758],
        [49.36272, 26.04300],
        [53.20780, 25.43312],
        [57.05289, 24.82325],
        [60.89797, 24.15314],
        [64.74305, 23.40774],
        [68.58814, 22.82045],
        [72.35554, 22.31786],
        [76.47250, 22.13397],
        [80.47294, 21.91694],
        [84.31802, 21.61074],
    ]

    c03 = [
        [-85.71039, 27.51059],
        [-81.71966, 28.27318],
        [-77.83574, 28.87394],
        [-74.02950, 29.59145],
        [-70.18441, 30.41000],
        [-66.33933, 31.36622],
        [-62.49425, 32.44291],
        [-58.64916, 33.42172],
        [-54.80408, 34.32524],
        [-50.95900, 35.09323],
        [-47.11391, 35.74075],
        [-43.26883, 36.25274],
        [-39.42375, 36.76474],
        [-35.57866, 37.30685],
        [-31.73358, 37.90919],
        [-28.10697, 38.44314],
        [-24.04341, 39.09029],
        [-20.19833, 39.91952],
        [-16.35325, 40.43904],
        [-12.50816, 40.78539],
        [-8.66308, 40.94350],
        [-4.81800, 41.07150],
        [-0.97291, 41.21456],
        [2.87217, 41.38773],
        [6.71725, 41.58349],
        [10.56234, 41.73408],
        [14.40742, 41.82443],
        [18.25250, 41.81690],
        [22.09759, 41.46302],
        [25.94267, 40.70005],
        [29.54307, 39.65133],
        [32.93373, 38.55771],
        [36.42926, 37.12614],
        [40.27434, 35.74828],
        [44.11943, 34.76947],
        [47.96451, 34.17465],
        [51.80959, 33.70031],
        [55.65468, 33.21090],
        [59.49976, 32.66126],
        [63.34484, 31.97609],
        [67.18993, 31.20810],
        [71.03501, 30.47023],
        [74.88009, 29.78736],
        [78.68634, 28.95222],
        [82.57026, 28.27318],
        [86.02695, 27.66013],
    ]

    c04 = [
        [-84.98216, 41.14723],
        [-81.71966, 41.48561],
        [-77.87458, 41.81690],
        [-74.02950, 42.13313],
        [-70.18441, 42.54724],
        [-66.33933, 43.60737],
        [-62.43069, 44.98605],
        [-59.89757, 46.14346],
        [-57.07617, 47.87800],
        [-54.45453, 49.80657],
        [-52.18243, 51.61881],
        [-50.08511, 53.48231],
        [-47.63824, 55.49766],
        [-44.66704, 57.30135],
        [-41.17151, 59.14184],
        [-37.32643, 60.65523],
        [-33.48134, 61.49099],
        [-29.81104, 62.02406],
        [-25.98537, 62.42918],
        [-21.59654, 62.73133],
        [-17.75146, 62.68062],
        [-13.90638, 62.45474],
        [-10.06129, 62.16863],
        [-6.21621, 61.95028],
        [-2.37113, 61.73193],
        [1.47396, 61.25758],
        [5.31904, 61.36299],
        [9.16412, 61.74698],
        [13.00921, 61.95028],
        [16.85429, 62.07827],
        [20.69937, 62.12345],
        [24.54446, 62.01804],
        [28.38954, 61.88480],
        [32.42882, 61.24898],
        [36.07971, 60.59500],
        [39.92479, 59.46560],
        [43.42032, 57.91791],
        [46.39152, 56.04636],
        [49.01317, 54.16067],
        [51.46004, 52.18476],
        [53.90691, 50.24435],
        [56.35378, 48.38676],
        [59.49976, 46.60554],
        [63.34484, 45.12980],
        [67.18993, 44.40698],
        [71.25348, 43.94293],
        [74.98496, 43.79485],
        [78.72518, 43.30018],
        [82.57026, 42.83336],
    ]

    tropopause = [
        [-85.69224459466632, 8.7659753129117],
        [-79.63251933664336, 8.86646902536853],
        [-73.5727940786204, 8.86646902536853],
        [-67.51306882059745, 8.86646902536853],
        [-61.453343562574496, 8.86646902536853],
        [-55.78456832119818, 9.35090025464757],
        [-49.92031807149854, 10.072393574850409],
        [-44.05606782179891, 10.824808037347651],
        [-38.77824259706924, 12.094636280904645],
        [-33.10946735569293, 13.226350088879961],
        [-27.636167122639932, 14.205519594869529],
        [-21.576441864616967, 14.52503806524507],
        [-15.516716606594017, 14.52503806524507],
        [-9.65246635689438, 14.52503806524507],
        [-3.5927410988714286, 14.52503806524507],
        [2.4669841591515365, 14.52503806524507],
        [8.526709417174487, 14.52503806524507],
        [14.586434675197452, 14.52503806524507],
        [20.646159933220403, 14.52503806524507],
        [26.705885191243354, 14.277668926889817],
        [31.20181038267974, 12.586282443385727],
        [36.479635607409406, 11.103098317997315],
        [41.36651081549245, 9.643362725515509],
        [47.62171108183871, 9.573790155353088],
        [53.48596133153835, 8.866469025368524],
        [59.54568658956133, 8.866469025368517],
        [65.60541184758428, 8.878064453728918],
        [71.66513710560723, 8.866469025368517],
        [77.52938735530687, 8.866469025368517],
        [83.87146540313019, 9.010767689409079],
    ]

    tropopause_df = pd.DataFrame(tropopause, columns=["latitude", "altitude"])
    c01_df = pd.DataFrame(c01, columns=["latitude", "altitude"])
    c02_df = pd.DataFrame(c02, columns=["latitude", "altitude"])
    c03_df = pd.DataFrame(c03, columns=["latitude", "altitude"])
    c04_df = pd.DataFrame(c04, columns=["latitude", "altitude"])

    # Add a 'value' column to each one before concatenating
    tropopause_df["value"] = 0.0
    c01_df["value"] = 0.1
    c02_df["value"] = 0.2
    c03_df["value"] = 0.3
    c04_df["value"] = 0.4

    tropopause_df["source"] = "tropopause"
    c01_df["source"] = "c01"
    c02_df["source"] = "c02"
    c03_df["source"] = "c03"
    c04_df["source"] = "c04"

    # Concatenate them
    c_df = pd.concat([tropopause_df, c01_df, c02_df, c03_df, c04_df], ignore_index=True)

    # Add cornerpoints to fill above value = 1.0 line
    added_cornerpoints = [
        {"latitude": -cp_lat, "altitude": cp_a, "value": 0.4},
        {"latitude": cp_lat, "altitude": cp_a, "value": 0.4},
    ]
    c_df = pd.concat([c_df, pd.DataFrame(added_cornerpoints)], ignore_index=True)
    c_df["altitude"] = c_df["altitude"] * 1000  # convert to meters
    c_df["value"] = c_df["value"] / 211.84924316406295  # normalize for 1 ppbv

    return c_df


def construct_myhre_1m_df(tropopause_value=1.75376, cp_lat=87, cp_a=60):
    m16 = [
        [-86.307, 11.178],
        [-83.994, 11.189],
        [-81.734, 11.285],
        [-79.166, 11.415],
        [-77.118, 11.491],
        [-75.096, 11.590],
        [-73.075, 11.693],
        [-71.053, 11.796],
        [-69.031, 11.824],
        [-67.010, 11.824],
        [-64.988, 11.792],
        [-62.966, 11.824],
        [-60.945, 11.871],
        [-58.923, 11.950],
        [-56.902, 12.053],
        [-54.880, 12.160],
        [-52.858, 12.311],
        [-50.837, 12.540],
        [-48.815, 12.809],
        [-46.793, 13.114],
        [-44.772, 13.447],
        [-42.750, 13.807],
        [-40.728, 14.187],
        [-38.707, 14.575],
        [-36.685, 14.943],
        [-34.664, 15.247],
        [-32.642, 15.505],
        [-30.675, 15.747],
        [-28.838, 15.782],
        [-26.696, 15.996],
        [-24.494, 16.131],
        [-22.460, 16.369],
        [-20.512, 16.641],
        [-18.490, 17.021],
        [-16.469, 17.409],
        [-14.447, 17.864],
        [-12.426, 18.434],
        [-10.404, 19.027],
        [-8.382, 19.637],
        [-6.361, 19.973],
        [-4.339, 20.270],
        [-2.317, 20.448],
        [-0.296, 20.361],
        [1.726, 20.247],
        [3.747, 19.981],
        [5.769, 19.506],
        [7.791, 19.039],
        [9.812, 18.632],
        [11.834, 18.216],
        [13.856, 17.828],
        [15.877, 17.515],
        [17.899, 17.234],
        [19.921, 16.946],
        [21.666, 16.684],
        [23.710, 16.388],
        [25.756, 16.192],
        [28.067, 16.000],
        [30.580, 15.786],
        [32.602, 15.604],
        [34.623, 15.247],
        [36.645, 14.828],
        [38.667, 14.436],
        [40.688, 14.080],
        [42.710, 13.739],
        [44.731, 13.494],
        [46.753, 13.296],
        [48.775, 13.063],
        [50.796, 12.801],
        [52.818, 12.576],
        [54.840, 12.406],
        [56.861, 12.267],
        [58.883, 12.128],
        [60.905, 11.990],
        [62.926, 11.859],
        [64.948, 11.729],
        [66.969, 11.594],
        [68.991, 11.448],
        [71.013, 11.388],
        [73.034, 11.388],
        [75.056, 11.388],
        [76.940, 11.426],
        [78.778, 11.326],
        [83.067, 11.095],
        [80.731, 11.197],
        [85.348, 11.024],
        [86.543, 10.953],
    ]

    m14 = [
        [-86.307, 13.680],
        [-84.285, 13.731],
        [-82.264, 13.862],
        [-79.795, 14.045],
        [-77.107, 14.299],
        [-74.453, 14.495],
        [-72.339, 14.634],
        [-70.318, 14.836],
        [-68.296, 15.081],
        [-66.275, 15.342],
        [-64.253, 15.592],
        [-62.231, 15.774],
        [-60.210, 15.948],
        [-58.188, 16.126],
        [-56.166, 16.304],
        [-54.145, 16.478],
        [-52.123, 16.629],
        [-50.101, 16.779],
        [-48.080, 16.934],
        [-46.058, 17.092],
        [-44.037, 17.238],
        [-42.015, 17.385],
        [-39.993, 17.527],
        [-37.972, 17.682],
        [-35.950, 17.907],
        [-33.928, 18.264],
        [-31.907, 18.620],
        [-29.885, 19.016],
        [-27.864, 19.506],
        [-26.104, 20.044],
        [-24.721, 20.427],
        [-23.022, 20.947],
        [-21.461, 21.500],
        [-19.974, 22.162],
        [-17.663, 23.314],
        [-15.734, 24.292],
        [-13.712, 25.159],
        [-11.690, 25.800],
        [-9.669, 26.441],
        [-7.647, 26.896],
        [-5.626, 27.114],
        [-3.604, 27.316],
        [-1.582, 27.379],
        [0.439, 27.332],
        [2.461, 27.300],
        [4.483, 27.078],
        [6.504, 26.730],
        [8.526, 26.307],
        [10.548, 25.673],
        [12.569, 25.060],
        [14.591, 24.387],
        [16.612, 23.556],
        [18.634, 22.732],
        [20.472, 21.993],
        [22.297, 21.198],
        [24.216, 20.611],
        [26.103, 20.031],
        [28.114, 19.569],
        [30.212, 19.067],
        [32.234, 18.723],
        [34.256, 18.426],
        [36.277, 18.145],
        [38.299, 17.899],
        [40.321, 17.670],
        [42.342, 17.500],
        [44.364, 17.345],
        [46.386, 17.191],
        [48.407, 17.029],
        [50.429, 16.831],
        [52.450, 16.637],
        [54.472, 16.526],
        [56.494, 16.451],
        [58.515, 16.395],
        [60.537, 16.288],
        [62.559, 16.146],
        [64.580, 16.027],
        [66.602, 15.873],
        [68.623, 15.722],
        [70.645, 15.592],
        [72.667, 15.493],
        [74.482, 15.421],
        [76.342, 15.219],
        [78.275, 15.050],
        [80.669, 14.950],
        [82.959, 14.812],
        [84.980, 14.685],
        [86.703, 14.507],
    ]

    m12 = [
        [-86.123, 16.237],
        [-84.102, 16.391],
        [-82.141, 16.560],
        [-80.518, 16.679],
        [-78.533, 16.783],
        [-76.632, 16.976],
        [-74.618, 17.223],
        [-72.707, 17.310],
        [-70.685, 17.492],
        [-68.664, 17.781],
        [-66.642, 18.208],
        [-64.620, 18.640],
        [-62.599, 19.047],
        [-60.577, 19.546],
        [-58.556, 19.914],
        [-56.534, 20.298],
        [-54.512, 20.714],
        [-52.491, 21.038],
        [-50.469, 21.339],
        [-48.447, 21.644],
        [-46.426, 21.798],
        [-44.404, 21.893],
        [-42.383, 21.992],
        [-40.361, 22.206],
        [-38.339, 22.428],
        [-36.318, 22.716],
        [-34.296, 23.243],
        [-32.274, 23.813],
        [-30.253, 24.424],
        [-28.338, 25.016],
        [-26.582, 25.632],
        [-24.935, 26.229],
        [-23.046, 26.904],
        [-21.063, 27.704],
        [-19.042, 28.436],
        [-17.020, 29.224],
        [-14.999, 29.889],
        [-12.977, 30.257],
        [-10.955, 30.546],
        [-8.934, 30.823],
        [-6.912, 31.001],
        [-4.890, 31.116],
        [-2.869, 31.250],
        [-0.847, 31.306],
        [1.174, 31.329],
        [3.196, 31.298],
        [5.218, 31.163],
        [7.239, 31.029],
        [9.261, 30.823],
        [11.283, 30.502],
        [13.304, 30.182],
        [15.326, 29.778],
        [17.348, 29.133],
        [19.369, 28.408],
        [21.322, 27.642],
        [24.129, 26.292],
        [22.710, 26.960],
        [25.775, 25.532],
        [27.639, 24.854],
        [29.661, 24.114],
        [31.683, 23.469],
        [33.704, 22.938],
        [35.726, 22.471],
        [37.748, 22.127],
        [39.769, 21.858],
        [41.791, 21.588],
        [43.813, 21.367],
        [45.834, 21.153],
        [47.856, 20.951],
        [49.877, 20.726],
        [51.899, 20.512],
        [53.921, 20.270],
        [55.942, 20.061],
        [57.964, 19.843],
        [59.986, 19.609],
        [62.007, 19.348],
        [64.029, 19.095],
        [66.051, 18.869],
        [68.072, 18.679],
        [70.094, 18.481],
        [71.909, 18.420],
        [73.892, 18.240],
        [75.835, 18.078],
        [77.661, 17.995],
        [80.570, 17.765],
        [82.591, 17.646],
        [84.613, 17.539],
        [86.524, 17.553],
    ]

    m10 = [
        [-86.307, 18.743],
        [-84.285, 18.948],
        [-82.264, 19.210],
        [-80.242, 19.502],
        [-78.221, 19.819],
        [-76.199, 20.140],
        [-74.116, 20.464],
        [-72.156, 20.826],
        [-70.134, 21.181],
        [-68.112, 21.675],
        [-66.091, 22.253],
        [-64.069, 22.859],
        [-62.047, 23.548],
        [-60.026, 24.264],
        [-58.004, 24.913],
        [-55.983, 25.479],
        [-53.961, 26.148],
        [-51.939, 26.734],
        [-49.918, 27.217],
        [-47.896, 27.605],
        [-45.874, 27.815],
        [-43.853, 27.981],
        [-41.831, 28.163],
        [-39.810, 28.369],
        [-37.788, 28.586],
        [-35.766, 28.891],
        [-33.745, 29.307],
        [-31.723, 29.711],
        [-29.701, 30.063],
        [-27.680, 30.431],
        [-25.658, 30.811],
        [-23.774, 31.248],
        [-22.579, 31.683],
        [-20.512, 32.133],
        [-18.490, 32.644],
        [-16.469, 33.051],
        [-14.447, 33.451],
        [-12.426, 33.696],
        [-10.404, 33.898],
        [-8.382, 34.072],
        [-6.361, 34.223],
        [-4.339, 34.357],
        [-2.317, 34.472],
        [-0.296, 34.547],
        [1.726, 34.595],
        [3.747, 34.623],
        [5.769, 34.555],
        [7.791, 34.539],
        [9.812, 34.385],
        [11.834, 34.195],
        [13.856, 34.001],
        [15.877, 33.724],
        [17.899, 33.419],
        [19.921, 33.059],
        [21.942, 32.505],
        [23.964, 31.808],
        [25.985, 31.052],
        [27.915, 30.344],
        [29.372, 29.729],
        [30.837, 29.232],
        [32.602, 28.531],
        [34.623, 27.910],
        [36.645, 27.379],
        [38.667, 26.960],
        [40.688, 26.524],
        [42.710, 26.152],
        [44.731, 25.930],
        [46.753, 25.713],
        [48.775, 25.424],
        [50.796, 25.103],
        [52.818, 24.783],
        [54.840, 24.494],
        [56.861, 24.173],
        [58.883, 23.845],
        [60.905, 23.469],
        [62.926, 23.081],
        [64.948, 22.728],
        [66.969, 22.447],
        [68.991, 22.174],
        [71.013, 21.964],
        [73.034, 21.834],
        [75.056, 21.707],
        [77.078, 21.592],
        [79.099, 21.462],
        [81.259, 21.330],
        [82.974, 21.221],
        [85.164, 21.102],
        [86.792, 20.981],
    ]

    m08 = [
        [-86.307, 21.913],
        [-84.285, 22.301],
        [-82.165, 22.826],
        [-80.426, 23.094],
        [-78.814, 23.474],
        [-76.951, 23.956],
        [-74.729, 24.445],
        [-72.707, 24.909],
        [-70.685, 25.372],
        [-68.664, 26.025],
        [-66.642, 26.750],
        [-64.620, 27.371],
        [-62.599, 27.993],
        [-60.577, 28.650],
        [-58.556, 29.327],
        [-56.534, 29.889],
        [-54.512, 30.356],
        [-52.491, 30.767],
        [-50.469, 31.128],
        [-48.447, 31.515],
        [-46.426, 31.785],
        [-44.404, 32.010],
        [-42.383, 32.224],
        [-40.361, 32.461],
        [-38.339, 32.663],
        [-36.318, 32.893],
        [-34.296, 33.178],
        [-32.274, 33.518],
        [-30.234, 33.822],
        [-27.997, 34.171],
        [-26.093, 34.533],
        [-23.636, 35.074],
        [-21.615, 35.489],
        [-19.593, 35.873],
        [-17.572, 36.222],
        [-15.550, 36.562],
        [-13.528, 36.839],
        [-11.507, 36.982],
        [-9.485, 37.120],
        [-7.463, 37.235],
        [-5.442, 37.350],
        [-3.420, 37.457],
        [-1.399, 37.528],
        [0.623, 37.603],
        [2.645, 37.678],
        [4.666, 37.706],
        [6.688, 37.773],
        [8.710, 37.773],
        [10.731, 37.702],
        [12.753, 37.627],
        [14.775, 37.504],
        [16.796, 37.306],
        [18.818, 37.100],
        [20.839, 36.772],
        [22.861, 36.341],
        [25.341, 35.645],
        [26.911, 35.092],
        [28.742, 34.549],
        [30.172, 33.976],
        [32.050, 33.281],
        [34.072, 32.513],
        [36.094, 31.773],
        [38.115, 31.171],
        [40.137, 30.692],
        [42.158, 30.261],
        [44.180, 30.015],
        [46.202, 29.782],
        [48.223, 29.544],
        [50.245, 29.283],
        [52.267, 29.014],
        [54.288, 28.737],
        [56.310, 28.440],
        [58.332, 28.151],
        [60.353, 27.759],
        [62.375, 27.296],
        [64.396, 26.829],
        [66.418, 26.425],
        [68.440, 26.029],
        [70.461, 25.657],
        [72.391, 25.395],
        [74.494, 25.096],
        [76.689, 24.801],
        [78.631, 24.596],
        [80.462, 24.454],
        [82.591, 24.205],
        [84.613, 24.046],
        [86.524, 23.906],
    ]

    m06 = [
        [-86.384, 26.907],
        [-84.426, 27.240],
        [-82.907, 27.497],
        [-81.097, 27.805],
        [-79.370, 28.268],
        [-76.934, 28.693],
        [-74.912, 29.085],
        [-72.891, 29.477],
        [-70.869, 29.841],
        [-68.848, 30.304],
        [-66.826, 30.811],
        [-64.804, 31.341],
        [-62.783, 31.919],
        [-60.761, 32.505],
        [-58.739, 33.000],
        [-56.718, 33.443],
        [-54.696, 33.886],
        [-52.674, 34.369],
        [-50.653, 34.749],
        [-48.631, 35.117],
        [-46.610, 35.418],
        [-44.588, 35.671],
        [-42.566, 35.933],
        [-40.545, 36.194],
        [-38.523, 36.455],
        [-36.501, 36.728],
        [-34.480, 37.033],
        [-32.632, 37.287],
        [-31.172, 37.583],
        [-29.483, 37.826],
        [-27.650, 38.169],
        [-25.107, 38.612],
        [-23.085, 38.973],
        [-21.063, 39.341],
        [-19.042, 39.665],
        [-17.020, 39.930],
        [-14.999, 40.184],
        [-12.977, 40.346],
        [-10.955, 40.425],
        [-8.934, 40.512],
        [-6.912, 40.595],
        [-4.890, 40.671],
        [-2.869, 40.750],
        [-0.847, 40.829],
        [1.174, 40.912],
        [3.196, 40.995],
        [5.218, 41.114],
        [7.239, 41.221],
        [9.261, 41.312],
        [11.283, 41.344],
        [13.304, 41.399],
        [15.326, 41.387],
        [17.348, 41.344],
        [19.369, 41.308],
        [21.391, 41.047],
        [23.445, 40.670],
        [25.181, 40.274],
        [27.228, 39.754],
        [29.294, 39.194],
        [31.315, 38.557],
        [33.337, 37.785],
        [35.358, 36.990],
        [37.380, 36.218],
        [39.402, 35.493],
        [41.423, 34.836],
        [43.445, 34.393],
        [45.467, 34.045],
        [47.488, 33.732],
        [49.510, 33.498],
        [51.532, 33.265],
        [53.553, 33.027],
        [55.575, 32.758],
        [57.596, 32.489],
        [59.618, 32.192],
        [61.640, 31.808],
        [63.661, 31.416],
        [65.683, 31.017],
        [67.705, 30.617],
        [69.726, 30.225],
        [71.748, 29.834],
        [73.718, 29.470],
        [75.680, 29.017],
        [77.813, 28.618],
        [79.834, 28.270],
        [81.856, 27.894],
        [83.878, 27.526],
        [85.899, 27.154],
        [87.140, 26.877],
    ]

    m04 = [
        [-86.307, 31.789],
        [-84.296, 32.195],
        [-82.027, 32.668],
        [-79.875, 33.006],
        [-77.930, 33.284],
        [-75.831, 33.724],
        [-73.810, 34.029],
        [-71.788, 34.318],
        [-69.766, 34.666],
        [-67.745, 35.137],
        [-65.723, 35.588],
        [-63.702, 36.051],
        [-61.680, 36.534],
        [-59.658, 37.005],
        [-57.637, 37.468],
        [-55.615, 37.936],
        [-53.593, 38.395],
        [-51.572, 38.806],
        [-49.550, 39.234],
        [-47.528, 39.642],
        [-45.507, 40.006],
        [-43.485, 40.374],
        [-41.464, 40.805],
        [-39.442, 41.252],
        [-37.420, 41.704],
        [-35.399, 42.127],
        [-33.402, 42.516],
        [-30.900, 43.062],
        [-28.696, 43.569],
        [-26.638, 43.920],
        [-24.555, 44.379],
        [-22.534, 44.633],
        [-20.512, 44.886],
        [-18.490, 45.080],
        [-16.469, 45.215],
        [-14.447, 45.333],
        [-12.426, 45.349],
        [-10.404, 45.314],
        [-8.382, 45.262],
        [-6.361, 45.302],
        [-4.339, 45.349],
        [-2.317, 45.361],
        [-0.296, 45.436],
        [1.726, 45.504],
        [3.747, 45.610],
        [5.769, 45.773],
        [7.791, 45.939],
        [9.812, 46.085],
        [11.834, 46.220],
        [13.856, 46.355],
        [15.877, 46.513],
        [17.899, 46.671],
        [19.921, 46.762],
        [22.426, 46.631],
        [24.452, 46.492],
        [26.418, 46.272],
        [28.283, 46.155],
        [30.396, 45.785],
        [32.418, 45.187],
        [34.440, 44.435],
        [36.461, 43.631],
        [38.391, 42.711],
        [40.321, 41.779],
        [42.342, 40.888],
        [44.364, 40.247],
        [46.386, 39.685],
        [48.407, 39.163],
        [50.429, 38.723],
        [52.450, 38.355],
        [54.472, 37.995],
        [56.494, 37.627],
        [58.515, 37.263],
        [60.537, 36.962],
        [62.559, 36.701],
        [64.580, 36.439],
        [66.602, 36.146],
        [68.623, 35.850],
        [70.627, 35.509],
        [72.436, 35.337],
        [74.398, 35.097],
        [76.565, 34.785],
        [78.548, 34.516],
        [80.570, 34.247],
        [82.591, 33.926],
        [84.613, 33.570],
        [86.524, 33.228],
    ]

    m02 = [
        [-86.307, 40.676],
        [-84.285, 40.829],
        [-82.264, 41.003],
        [-80.109, 41.151],
        [-77.542, 41.342],
        [-75.514, 41.594],
        [-73.846, 41.730],
        [-71.788, 41.906],
        [-69.766, 42.135],
        [-67.745, 42.527],
        [-65.723, 43.049],
        [-63.702, 43.714],
        [-61.680, 44.502],
        [-59.750, 45.410],
        [-57.912, 46.438],
        [-56.258, 47.374],
        [-54.880, 48.353],
        [-53.593, 49.349],
        [-52.215, 50.296],
        [-50.929, 51.220],
        [-49.826, 52.170],
        [-48.723, 53.143],
        [-47.345, 54.134],
        [-45.691, 55.034],
        [-44.037, 55.973],
        [-42.291, 56.952],
        [-40.407, 57.690],
        [-39.230, 58.303],
        [-35.125, 59.639],
        [-37.682, 58.796],
        [-32.642, 60.125],
        [-30.620, 60.449],
        [-28.599, 60.695],
        [-26.577, 60.956],
        [-24.555, 61.110],
        [-22.534, 61.110],
        [-20.512, 61.110],
        [-18.490, 61.043],
        [-16.469, 60.905],
        [-14.447, 60.746],
        [-12.426, 60.501],
        [-10.404, 60.228],
        [-8.382, 59.975],
        [-6.361, 59.848],
        [-4.339, 59.741],
        [-2.317, 59.579],
        [-0.296, 59.349],
        [1.726, 59.116],
        [3.747, 59.155],
        [5.769, 59.472],
        [7.791, 59.785],
        [9.812, 60.038],
        [11.834, 60.240],
        [14.067, 60.460],
        [16.245, 60.640],
        [18.306, 60.766],
        [20.288, 60.835],
        [22.310, 60.806],
        [24.331, 60.849],
        [26.353, 60.762],
        [28.375, 60.651],
        [30.396, 60.537],
        [32.418, 60.212],
        [34.440, 59.785],
        [36.461, 59.333],
        [38.483, 58.684],
        [40.504, 57.999],
        [42.342, 57.260],
        [43.904, 56.305],
        [45.375, 55.385],
        [46.937, 54.483],
        [48.407, 53.497],
        [49.602, 52.562],
        [50.796, 51.600],
        [52.083, 50.593],
        [53.369, 49.604],
        [54.656, 48.615],
        [56.310, 47.630],
        [57.271, 46.725],
        [58.690, 46.091],
        [60.188, 45.547],
        [61.493, 45.213],
        [62.518, 44.715],
        [64.396, 44.316],
        [66.418, 44.079],
        [68.440, 43.893],
        [70.461, 43.703],
        [72.483, 43.485],
        [74.505, 43.259],
        [76.526, 43.034],
        [78.548, 42.780],
        [80.570, 42.543],
        [82.591, 42.325],
        [84.613, 42.119],
        [86.524, 41.992],
    ]

    m_trop = [
        [-85.77, 8.89],
        [-79.69, 8.88],
        [-73.63, 8.91],
        [-67.65, 8.91],
        [-61.59, 8.91],
        [-55.71, 9.30],
        [-49.83, 10.03],
        [-44.04, 10.80],
        [-38.71, 12.09],
        [-33.29, 13.25],
        [-27.59, 14.31],
        [-20.97, 14.57],
        [-15.64, 14.57],
        [-9.58, 14.57],
        [-3.60, 14.57],
        [2.46, 14.57],
        [8.43, 14.57],
        [14.50, 14.57],
        [20.56, 14.57],
        [26.37, 14.16],
        [31.13, 12.58],
        [36.55, 11.04],
        [41.73, 9.58],
        [47.76, 9.61],
        [53.28, 8.87],
        [59.53, 8.91],
        [65.50, 8.91],
        [71.56, 8.91],
        [77.54, 8.91],
        [83.60, 8.91],
        [87.19, 8.90],
    ]

    tropopause_df = pd.DataFrame(m_trop, columns=["latitude", "altitude"])
    m02_df = pd.DataFrame(m02, columns=["latitude", "altitude"])
    m04_df = pd.DataFrame(m04, columns=["latitude", "altitude"])
    m06_df = pd.DataFrame(m06, columns=["latitude", "altitude"])
    m08_df = pd.DataFrame(m08, columns=["latitude", "altitude"])
    m10_df = pd.DataFrame(m10, columns=["latitude", "altitude"])
    m12_df = pd.DataFrame(m12, columns=["latitude", "altitude"])
    m14_df = pd.DataFrame(m14, columns=["latitude", "altitude"])
    m16_df = pd.DataFrame(m16, columns=["latitude", "altitude"])

    # Add a 'value' column to each one before concatenating
    tropopause_df["value"] = tropopause_value  # TODO
    m02_df["value"] = 0.2
    m04_df["value"] = 0.4
    m06_df["value"] = 0.6
    m08_df["value"] = 0.8
    m10_df["value"] = 1.0
    m12_df["value"] = 1.2
    m14_df["value"] = 1.4
    m16_df["value"] = 1.6

    tropopause_df["source"] = "tropopause"
    m02_df["source"] = "m02"
    m04_df["source"] = "m04"
    m06_df["source"] = "m06"
    m08_df["source"] = "m08"
    m10_df["source"] = "m10"
    m12_df["source"] = "m12"
    m14_df["source"] = "m14"
    m16_df["source"] = "m16"

    # Concatenate them
    m_df = pd.concat(
        [
            m02_df,
            m04_df,
            m06_df,
            m08_df,
            m10_df,
            m12_df,
            m14_df,
            m16_df,
            tropopause_df,
        ],
        ignore_index=True,
    )
    added_cornerpoints = [
        {"latitude": -cp_lat, "altitude": cp_a, "value": 0.1},  # TODO verify
        {"latitude": cp_lat, "altitude": cp_a, "value": 0.1},
    ]
    m_df = pd.concat([m_df, pd.DataFrame(added_cornerpoints)], ignore_index=True)
    m_df["altitude"] = m_df["altitude"] * 1000  # convert to meters
    # m_df["value"] = m_df["value"]  # TODO See if it must be normalized
    return m_df


def run_verification_myhre_1m():
    # verification the myhre plot is properly represented.
    import matplotlib.image as mpimg

    m_df = construct_myhre_1m_df()

    # Load your background image
    # img = mpimg.imread(r"C:\Users\atzeh\OneDrive\Documenten\TU\MASTER\Thesis\myhre2b.png")  # or .jpg, .tif, etc.

    # Create the plot
    fig, ax = plt.subplots()

    # Show the image as the background
    # ax.imshow(img, extent=[-87, 87, 0, 65], aspect='auto')  # adjust extent to match your data coordinates

    # Plot your points (example from earlier)

    ax.scatter(
        m_df[m_df["source"] == "m02"]["latitude"],
        m_df[m_df["source"] == "m02"]["altitude"] / 1000,
        color="purple",
        label="m02",
    )
    ax.scatter(
        m_df[m_df["source"] == "m04"]["latitude"],
        m_df[m_df["source"] == "m04"]["altitude"] / 1000,
        color="blue",
        label="m04",
    )
    ax.scatter(
        m_df[m_df["source"] == "m06"]["latitude"],
        m_df[m_df["source"] == "m06"]["altitude"] / 1000,
        color="green",
        label="m06",
    )
    ax.scatter(
        m_df[m_df["source"] == "m08"]["latitude"],
        m_df[m_df["source"] == "m08"]["altitude"] / 1000,
        color="orange",
        label="m08",
    )
    ax.scatter(
        m_df[m_df["source"] == "m10"]["latitude"],
        m_df[m_df["source"] == "m10"]["altitude"] / 1000,
        color="red",
        label="m10",
    )
    ax.scatter(
        m_df[m_df["source"] == "m12"]["latitude"],
        m_df[m_df["source"] == "m12"]["altitude"] / 1000,
        color="purple",
        label="m12",
    )
    ax.scatter(
        m_df[m_df["source"] == "m14"]["latitude"],
        m_df[m_df["source"] == "m14"]["altitude"] / 1000,
        color="blue",
        label="m14",
    )
    ax.scatter(
        m_df[m_df["source"] == "m16"]["latitude"],
        m_df[m_df["source"] == "m16"]["altitude"] / 1000,
        color="green",
        label="m16",
    )

    ax.set_xlim(-87, 87)
    ax.set_ylim(0, 65)
    ax.legend()
    plt.show()


def construct_myhre(identifier):
    """
    A function to read all the data for the plots of Myhre 2007 which is stored in .csv files.
    Args:
        identifier: a,b or c as it refers to the specific image

    Returns: a pd.DataFrame with the data

    """
    if identifier not in ["a", "b", "c"]:
        raise ValueError("identifier must be 'a', 'b' or 'c'")
    df = pd.read_csv(
        f"../repository/swv_data/myhre_2{identifier}.csv"
    )  # TODO see if the way i defined the path is proper, ony way is to also pass the path to repository
    return df


def get_griddata(df, heights, latitudes, plot_data=False):

    # Extract columns
    x = df["latitude"].values
    y = df["altitude"].values / 1000  # due to griddata
    z = df["value"].astype(float).values

    # Create grid
    # xi = np.linspace(-85, 86, 171)
    # yi = np.linspace(0, 60, 601)
    xi = latitudes
    yi = heights / 1000  # due to gridddata
    X, Y = np.meshgrid(xi, yi)

    # Interpolate values onto grid
    myhre_griddata = griddata((x, y), z, (X, Y), method="linear")

    # Make a Plot if plot_data is true
    if plot_data:
        plt.figure(figsize=(10, 6))
        heatmap = plt.pcolormesh(X, Y, myhre_griddata, shading="auto", cmap="viridis")
        plt.colorbar(heatmap, label="Value")

        plt.xlabel("Latitude (deg)")
        plt.ylabel("Altitude (km)")
        plt.title("SWV ppmv cause by a change of 1 ppbv CH4")
        plt.tight_layout()
        # plt.scatter(df[df["source"] == "b10"]["latitude"], df[df["source"] == "b10"]["altitude"]/1000, color="red",
        #             label="b10") # /1000 due to griddata
        plt.show()
    return myhre_griddata


def get_total_mass(df, heights, latitudes, delta_h, delta_deg, plot_data=False):
    volumes = get_volume_matrix(heights, latitudes, delta_h, delta_deg)
    # myhre_2b_df = construct_myhre_2b_df()
    myhre_grid = get_griddata(df, heights, latitudes, plot_data=plot_data)
    # print("nansum thise",np.nansum(myhre_grid))
    method = "parts"  # 'kg'
    if method == "parts":
        number_density = Atmosphere(heights).number_density
        parts_mat = volumes * number_density[:, np.newaxis]
        SWV_mol_mat = parts_mat * myhre_grid * 10**-6 / N_avogrado
        SWV_mass_mat = SWV_mol_mat * M_h2o
        # else:
        density = Atmosphere(heights).density
        mass_mat = volumes * density[:, np.newaxis]
        SWV_mass_mat_2 = myhre_grid * 10**-6 * M_h2o / molar_mass_air * mass_mat
        # weighted_sum = ((10**6 - myhre_grid)*molar_mass_air + myhre_grid*M_h2o)*10**-6 # weighted mass does not care diff < 1kg
        # SWV_mass_mat_3 = myhre_grid * 10 ** -6 * M_h2o / weighted_sum * mass_mat
    print(
        "2 ways of calculating the mass, number should be the same:",
        np.nansum(SWV_mass_mat),
        np.nansum(SWV_mass_mat_2),
    )
    print(
        "procentual difference = ",
        (np.nansum(SWV_mass_mat) - np.nansum(SWV_mass_mat_2))
        / np.nansum(SWV_mass_mat_2)
        * 100,
        "%",
    )
    # print('procentual difference:', np.nansum(SWV_mass_mat-SWV_mass_mat_2)/np.nansum(SWV_mass_mat_2)*100, "% this is neglegible")
    total_SWV_mass = np.nansum(SWV_mass_mat)
    # print("Total SWV mass is:", total_SWV_mass * 10 ** -9, "Tg")
    return total_SWV_mass  # is often a float


def calc_swv_rf_float(total_SWV_mass: float):
    """
    TODO Can be deleted, it is not used
    Args:
        total_SWV_mass:

    Returns:

    """
    if not isinstance(total_SWV_mass, (int, float)):
        raise TypeError("total SWV mass must be a float or integer")
    total_SWV_mass_Tg = total_SWV_mass  # 10 ** -9 Input mass is already in Tg
    # only valid when the mass is in a decent range:
    # 0-160 Tg as the plot reaches till 160Tg #TODO should 0 be 1.581 as there the value of pletzer becomes positive??
    if total_SWV_mass_Tg < 0.0 or total_SWV_mass_Tg > 160:
        raise ValueError("Total SWV mass out of range of Pletzer plot")
    a = -0.00088
    b = 0.47373
    c = -0.74676
    SWV_RF = (
        a * total_SWV_mass_Tg**2 + b * total_SWV_mass_Tg + c
    )  # in mW for mass in Tg
    return SWV_RF / 1000  # W/m**2


# thsi is some text tocheck the commit

# delta_h = 100.0  # height increment in meters
# delta_deg = 1.0  # latitude increment
# heights = np.arange(0, 60000 + delta_h, delta_h)  # 0 to 60 km
# latitudes = np.arange(-85, 86, delta_deg)  # -85° to 85°
# # tot_mass = get_total_mass(heights, latitudes, delta_h, delta_deg)
# # print(tot_mass, tot_mass / 614.2, tot_mass / (1778 - 1556.2))
# df = construct_myhre("a")
# myhre_grid = get_griddata(df, heights, latitudes, plot_data=True)
# print(myhre_grid)
# m = np.nanmean(myhre_grid)
# print(m)
# #
# print(calc_swv_rf(tot_mass))
# # difference with the jupyter way of computing
# print(calc_swv_rf(1 * 10 ** 9))
# # print(get_SWV_RF(-170.30558591104*10**9))
